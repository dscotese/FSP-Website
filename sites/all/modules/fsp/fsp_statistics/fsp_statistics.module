<?php

/**
 * FSP module the provides for the counter block
 */

function fsp_statistics_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      // If $op is "list", we just need to return a list of block descriptions.
      $blocks[0] = array(
        'info'       => t('FSP signups by week'),
      );
      // Default block settings: Make it visible on all pages
      $blocks[1] = array(
        'info'       => t('Signups by week'),
        'status'     => TRUE,
        'weight'     => 0,
        'visibility' => 1,
        'pages'      => '',
      );
      return $blocks;
    case 'configure':
      // If $op is "configure", we need to provide the administrator with a
      // configuration form. The $delta parameter tells us which block is being
      // configured. In this example, we'll allow the administrator to customize
      // the text of the first block.
      $form = array();
      if ($delta == 0) {
				// noop
      }
      return $form;
    case 'save':
      // If $op is "save", we need to save settings from the configuration form.
      // Since the first block is the only one that allows configuration, we
      // need to check $delta to make sure we only save it.
      if ($delta == 0) {
				// noop
      }
      return;
    case 'view': default:
	  // The subject is displayed at the top of the block. Note that it
	  // should be passed through t() for translation.
	  $block['subject'] = t('');
	  // The content of the block is typically generated by calling a custom
	  // function.
	  $block['content'] = fsp_statistics_contents();
      return $block;
  }
}

/**
 * Create a chart of signups per week
 */
function fsp_statistics_contents() {
	// http://drupal.org/node/682002
	$query_weekly = "
    SELECT
      YEARWEEK( FROM_UNIXTIME( u.created )) AS year_week ,
      COUNT( u.uid ) AS signups
		FROM users AS u
		JOIN users_roles AS isAur on u.uid = isAur.uid AND isAur.rid = 16
		JOIN users_roles AS isPur on u.uid = isPur.uid AND isPur.rid = 30
    GROUP BY year_week
    ORDER BY year_week ASC
	";

	$result = mysql_query( $query_weekly );
  
  while ($item = db_fetch_object($result)) {
    $data[$item->year_week] = $item->signups;
	}
  unset($data['196952']);

	$x1_labels = array();
	$x2_labels = array();
	foreach( $data as $key => $val ){
		//if( $key % 4 == 0 ) $x1_labels[] = substr($key,3,2);
		if( $key % 52 == 0 ) $x2_labels[] = substr($key,0,4);
	}

	
	// Google Charts API
	$chart = array(
			'#chart_id' => 'signups-per-week',
			'#title' => 'Signups per week',
			'#type' => CHART_TYPE_LINE,
			'#size' =>  chart_size(700,300),
			'#adjust_resolution' => TRUE,
	);

  $chart['#data'][] = array_values($data);

  $chart['#mixed_axis_labels'][CHART_AXIS_Y_LEFT][0][] = chart_mixed_axis_range_label(0, 100);

  //$chart['#mixed_axis_labels'][CHART_AXIS_X_BOTTOM][0][] = chart_mixed_axis_label(range(2001,2011));
  //$chart['#mixed_axis_labels'][CHART_AXIS_X_BOTTOM][0][] = chart_mixed_axis_label($x1_labels);
  $chart['#mixed_axis_labels'][CHART_AXIS_X_BOTTOM][1][] = chart_mixed_axis_label($x2_labels);
  $chart['#mixed_axis_labels'][CHART_AXIS_X_BOTTOM][2][] = chart_mixed_axis_label(t('Weeks'), 50);
  //$chart['#mixed_axis_labels'][CHART_AXIS_X_BOTTOM][1][] = array_keys($data);
  dsm($chart);

	return chart_render($chart);
}

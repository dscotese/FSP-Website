<?php

/**
 * FSP module the provides for the counter block
 */

function fsp_counter_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':
      // If $op is "list", we just need to return a list of block descriptions.
      $blocks[0] = array(
        'info'       => t('FSP counter'),
      );
      // Default block settings: Make it visible on all pages
      $blocks[1] = array(
        'info'       => t('Participants and early movers'),
        'status'     => TRUE,
        'weight'     => 0,
        'visibility' => 1,
        'pages'      => '',
      );
      return $blocks;
    case 'configure':
      // If $op is "configure", we need to provide the administrator with a
      // configuration form. The $delta parameter tells us which block is being
      // configured. In this example, we'll allow the administrator to customize
      // the text of the first block.
      $form = array();
      if ($delta == 0) {
        // All we need to provide is a text field, Drupal will take care of
        // the other block configuration options and the save button.
        $form['block_example_string'] = array(
          '#type' => 'textfield',
          '#title' => t('Block contents'),
          '#size' => 60,
          '#description' => t('This space intentionally left blank - dgarthwaite'),
          '#default_value' => variable_get('block_example_string',  t('Some example content.')),
        );
      }
      return $form;
    case 'save':
      // If $op is "save", we need to save settings from the configuration form.
      // Since the first block is the only one that allows configuration, we
      // need to check $delta to make sure we only save it.
      if ($delta == 0) {
        // Have Drupal save the string to the database.
        variable_set('block_example_string', $edit['block_example_string']);
      }
      return;
    case 'view': default:
	  // The subject is displayed at the top of the block. Note that it
	  // should be passed through t() for translation.
	  $block['subject'] = t('');
	  // The content of the block is typically generated by calling a custom
	  // function.
	  $block['content'] = fsp_counter_contents();
      return $block;
  }
}

function fsp_counter_contents() {
    $output = "";
	// PATH to images (be sure to put an ending '/')
	$path = "/files/images/counter/";

	// EXTENSION of image (number) files
	$extension = "gif"; // change to file extension of the counter 

	// This test _must_ be done, because the code will
	// break the site otherwise if the fsp module is  
	// disabled
	if (function_exists("fsp_get_stats")) {
		$stats = fsp_get_stats();
		$FSPCount = $stats["participants"];
		$NHCount = $stats["moved_to_nh"];
	}
	else {
		$FSPCount = 99999;
		$NHCount = 9999;
	}

	$FirstCount = 1033;

	$output .= '<div id="countertable">' . "\n";
	$output .= '<div id="countertable-participants">' . "\n";

	$output .= '<a href="/about/membership.php">' . "\n";
	$output .= "<img src='{$path}home_icon.gif'>\n";    
	$z = (string)$FSPCount;
	for ($i=0; $i < strlen($z); $i++) {
		$output .= '<img src="' . $path . $z[$i] . '.' . $extension . '" alt="Counter"/>' ;//. "\n";
	}
	$output .= "</a> Participants<br />";

	$output .= "</div>\n"; // end countertable-participants
	$output .= '<div id="countertable-movers">' . "\n";

	$output .= "&nbsp;&nbsp;&nbsp;<img src='{$path}feet_icon.gif'>\n";     
	$z = "0" . (string)$NHCount;
	for ($i=0; $i < strlen($z); $i++) {
		$output .= "<img src=\"$path" . $z[$i] . ".$extension\"";
		$output .= '  width="18" height="20" align="middle" alt="Counter"/>';
	}
	$output .= " <small>in New Hampshire</small>";

	$output .= "</div>\n"; // end countertable-movers
	$output .= "</div>\n"; // end countertable
  return $output;
}
